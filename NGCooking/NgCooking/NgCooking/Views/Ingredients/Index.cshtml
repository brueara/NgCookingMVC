@model NgCooking.ViewModels.IngredientsViewModel
@using PagedList.Mvc;

@{
    ViewBag.Title = "Liste des ingrédients";
}

<div class="content" id="content_ingredients">
    <h1 class="page-title">Les ingredients</h1>

    <div class="row">
        <div class="col-xs-12">
            <div class="panel">
                <div class="row imgback">
                    <div class="hidden-xs col-sm-3"></div>
                    <div class="col-xs-12 col-sm-9 fp">
                        <div class="filters">
                            @using (Html.BeginForm("Index", "Ingredients", FormMethod.Get))
                            {
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.PageNum)
                                @Html.HiddenFor(model => model.Affiche)
                                @Html.HiddenFor(model => model.OldCat)
                                <div class="filter">
                                    <p>Nom</p>
                                    <p>
                                        @Html.Editor("searchname", ViewBag.SearchName as string, new { htmlAttributes = new { placeholder = "ex: Banane" } })
                                    </p>

                                </div>
                                <div class="filter">
                                    <p>@Html.LabelFor(model => model.ListeDesCategories)</p>
                                    <p>
                                        @Html.DropDownListFor(Model => Model.SelectCat, new SelectList(Model.ListeDesCategories, "Id", "NameToDisplay", ViewBag.CatChoise))
                                    </p>
                                </div>
                                <div class="filter">
                                    <p><label for="">Nombre de calories <span class="fwn">(kcal/100g)</span></label></p>
                                    <p>
                                        <span class="span-label">entre :</span>
                                        @Html.TextBox("mincal", ViewBag.MinCal as string, new { type = "number", @class = "mr0", placeholder = "ex: 70" })
                                        <span class="span-label">et</span>
                                        @Html.TextBox("maxcal", ViewBag.MaxCal as string, new { type = "number", placeholder = "ex: 220" })
                                    </p>
                                </div>
                                <div class="row showmore">
                                    <div class="col-xs-12">
                                        <input type="submit" class="btn btn_color1" value="Rechercher">
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xs-12">
            @if (Model != null && Model.ListeDesIngredients.Count() > 0)
            {
                <div class="result">

                    <div class="ingredients row">
                        @{
                            foreach (var ingredient in Model.ListeDesIngredients)
                            {
                                <div class="col-xs-12 ingredient">
                                    <div class="ing-wrap">
                                        <div class="top">
                                            <p class="name">@ingredient.name</p>
                                            <p class="category">@ingredient.category.nameToDisplay</p>
                                            <a href="@Url.Action("Details", "Ingredients", new { id = ingredient.id })">
                                                <img class="img" src="~/Resources/ingredients/@ingredient.picture" alt="@ingredient.name">
                                            </a>
                                            <div class="calories-wrap">
                                                <div class="val">
                                                    <span>@ingredient.calories kcal</span>
                                                    <div class="battery">
                                                        <!-- pourcentage ci-dessous à moduler en fonction du nombre de calories de l'ingredient sur nombre de calories max -->
                                                        <div class="level" style="width: @((ingredient.calories * 100) / Model.FullCalorie)%;"></div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="bot">
                                            <p class="description">@ingredient.description</p>
                                            <div class="list">
                                                @*<p class="list-title">Aliments similaires</p>
                                                    <ul>
                                                        <li class="item">
                                                                <img class="item-img" src="img/ingredients/boeuf.jpg" alt="Boeuf">
                                                                <p class="item-name" title="Boeuf">Boeuf</p>
                                                            </li>
                                                            <li class="item">
                                                                <img class="item-img" src="img/ingredients/thon.jpg" alt="thon">
                                                                <p class="item-name" title="Thon">Thon</p>
                                                            </li>
                                                            <li class="item">
                                                                <img class="item-img" src="img/ingredients/oeuf.jpg" alt="Oeuf">
                                                                <p class="item-name" title="Oeuf">Oeuf</p>
                                                            </li>
                                                                                            </ul>*@
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>

                </div>
                if (Model.ListeDesIngredients.PageCount > 1)
                {
                    <div class="sort">
                        <span class="span">
                            Page @(Model.ListeDesIngredients.PageCount < Model.ListeDesIngredients.PageNumber ? 0 : Model.ListeDesIngredients.PageNumber) sur @Model.ListeDesIngredients.PageCount
                        </span>
                    </div>
                    @Html.PagedListPager(Model.ListeDesIngredients, page => Url.Action("Index", new { page, searchname = ViewBag.SearchName, selectcat = ViewBag.CatChoise, mincal = ViewBag.MinCal, maxcal = ViewBag.MaxCal }))
                }
                            }

                            else
                            {
                                <div class="result">
                                    <div class="recettes row">

                                        <p class="col-xs-12 blank">Aucune recette ne correspond à votre recherche</p>
                                    </div>
                                </div>
                            }
        </div>

    </div>
</div>
